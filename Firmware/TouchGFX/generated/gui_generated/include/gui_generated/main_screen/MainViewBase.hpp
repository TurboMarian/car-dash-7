/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <gui/containers/value_container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <gui/containers/message_container.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    value_container container_0;
    value_container container_1;
    value_container container_2;
    value_container container_3;
    value_container container_4;
    value_container container_5;
    value_container container_6;
    value_container container_7;
    touchgfx::Image image1;
    touchgfx::TextArea gear_label;
    touchgfx::TextAreaWithOneWildcard gear;
    touchgfx::TextAreaWithOneWildcard rpm;
    touchgfx::Image logo;
    touchgfx::Image indLeft;
    touchgfx::Image indRight;
    touchgfx::Image indHigh;
    touchgfx::Image indFuel;
    touchgfx::Image indOil;
    touchgfx::Image indBatt;
    touchgfx::Image indPark;
    touchgfx::Image indDTC;
    touchgfx::Image indECT;
    touchgfx::Image indLow;
    touchgfx::Gauge gauge1;
    message_container message_container_0;

    /*
     * Wildcard Buffers
     */
    static const uint16_t GEAR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar gearBuffer[GEAR_SIZE];
    static const uint16_t RPM_SIZE = 10;
    touchgfx::Unicode::UnicodeChar rpmBuffer[RPM_SIZE];

private:

};

#endif // MAINVIEWBASE_HPP
