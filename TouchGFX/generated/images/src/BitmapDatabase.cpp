// 4.20.0 0xda54a2d4
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_indbatt[]; // BITMAP_INDBATT_ID = 0, Size: 49x38 pixels
extern const unsigned char image_indbatt_extra_data[];
extern const unsigned char image_inddtc[]; // BITMAP_INDDTC_ID = 1, Size: 75x36 pixels
extern const unsigned char image_inddtc_extra_data[];
extern const unsigned char image_indect[]; // BITMAP_INDECT_ID = 2, Size: 45x40 pixels
extern const unsigned char image_indect_extra_data[];
extern const unsigned char image_indfuel[]; // BITMAP_INDFUEL_ID = 3, Size: 32x40 pixels
extern const unsigned char image_indfuel_extra_data[];
extern const unsigned char image_indhigh[]; // BITMAP_INDHIGH_ID = 4, Size: 49x28 pixels
extern const unsigned char image_indhigh_extra_data[];
extern const unsigned char image_indleft[]; // BITMAP_INDLEFT_ID = 5, Size: 65x42 pixels
extern const unsigned char image_indleft_extra_data[];
extern const unsigned char image_indlow[]; // BITMAP_INDLOW_ID = 6, Size: 48x30 pixels
extern const unsigned char image_indlow_extra_data[];
extern const unsigned char image_indoil[]; // BITMAP_INDOIL_ID = 7, Size: 67x28 pixels
extern const unsigned char image_indoil_extra_data[];
extern const unsigned char image_indpark[]; // BITMAP_INDPARK_ID = 8, Size: 56x41 pixels
extern const unsigned char image_indpark_extra_data[];
extern const unsigned char image_indright[]; // BITMAP_INDRIGHT_ID = 9, Size: 65x42 pixels
extern const unsigned char image_indright_extra_data[];
extern const unsigned char image_needel[]; // BITMAP_NEEDEL_ID = 10, Size: 34x290 pixels
extern const unsigned char image_needel_extra_data[];
extern const unsigned char image_race_dash_full[]; // BITMAP_RACE_DASH_FULL_ID = 11, Size: 1027x617 pixels
extern const unsigned char image_race_dash_full_extra_data[];

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_indbatt, image_indbatt_extra_data, 49, 38, 1, 4, 47, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 2, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_inddtc, image_inddtc_extra_data, 75, 36, 18, 1, 3, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 14, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indect, image_indect_extra_data, 45, 40, 20, 2, 5, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 32, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indfuel, image_indfuel_extra_data, 32, 40, 2, 15, 19, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 24, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indhigh, image_indhigh_extra_data, 49, 28, 22, 25, 19, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 2, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indleft, image_indleft_extra_data, 65, 42, 14, 13, 50, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 16, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indlow, image_indlow_extra_data, 48, 30, 22, 24, 18, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 2, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indoil, image_indoil_extra_data, 67, 28, 12, 25, 30, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 2, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indpark, image_indpark_extra_data, 56, 41, 23, 9, 2, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 23, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_indright, image_indright_extra_data, 65, 42, 1, 13, 50, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 16, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_needel, image_needel_extra_data, 34, 290, 8, 2, 15, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 194, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 },
    { image_race_dash_full, image_race_dash_full_extra_data, 1027, 617, 0, 0, 1027, ((uint8_t)touchgfx::Bitmap::L8) >> 3, 617, ((uint8_t)touchgfx::Bitmap::L8) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
